//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MediaCatalogueModel", "FK_Media_Item_Media_Type", "Media_Type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaLibrary.WCF.Media_Type), "Media_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaLibrary.WCF.Media_Item))]
[assembly: EdmRelationshipAttribute("MediaCatalogueModel", "FK_Music_Track_Media_Item", "Media_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaLibrary.WCF.Media_Item), "Music_Track", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaLibrary.WCF.Music_Track))]
[assembly: EdmRelationshipAttribute("MediaCatalogueModel", "FK_Music_Track_Music_Artist", "Music_Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaLibrary.WCF.Music_Artist), "Music_Track", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaLibrary.WCF.Music_Track))]
[assembly: EdmRelationshipAttribute("MediaCatalogueModel", "FK_Music_Genre_Music_Genre", "Music_Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaLibrary.WCF.Music_Genre), "Music_Genre1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaLibrary.WCF.Music_Genre))]
[assembly: EdmRelationshipAttribute("MediaCatalogueModel", "FK_Music_Track_Music_Genre", "Music_Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaLibrary.WCF.Music_Genre), "Music_Track", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaLibrary.WCF.Music_Track))]

#endregion

namespace MediaLibrary.WCF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MediaCatalogueEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MediaCatalogueEntities object using the connection string found in the 'MediaCatalogueEntities' section of the application configuration file.
        /// </summary>
        public MediaCatalogueEntities() : base("name=MediaCatalogueEntities", "MediaCatalogueEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MediaCatalogueEntities object.
        /// </summary>
        public MediaCatalogueEntities(string connectionString) : base(connectionString, "MediaCatalogueEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MediaCatalogueEntities object.
        /// </summary>
        public MediaCatalogueEntities(EntityConnection connection) : base(connection, "MediaCatalogueEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Media_Item> Media_Item
        {
            get
            {
                if ((_Media_Item == null))
                {
                    _Media_Item = base.CreateObjectSet<Media_Item>("Media_Item");
                }
                return _Media_Item;
            }
        }
        private ObjectSet<Media_Item> _Media_Item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Media_Type> Media_Type
        {
            get
            {
                if ((_Media_Type == null))
                {
                    _Media_Type = base.CreateObjectSet<Media_Type>("Media_Type");
                }
                return _Media_Type;
            }
        }
        private ObjectSet<Media_Type> _Media_Type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Music_Artist> Music_Artist
        {
            get
            {
                if ((_Music_Artist == null))
                {
                    _Music_Artist = base.CreateObjectSet<Music_Artist>("Music_Artist");
                }
                return _Music_Artist;
            }
        }
        private ObjectSet<Music_Artist> _Music_Artist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Music_Genre> Music_Genre
        {
            get
            {
                if ((_Music_Genre == null))
                {
                    _Music_Genre = base.CreateObjectSet<Music_Genre>("Music_Genre");
                }
                return _Music_Genre;
            }
        }
        private ObjectSet<Music_Genre> _Music_Genre;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Music_Track> Music_Track
        {
            get
            {
                if ((_Music_Track == null))
                {
                    _Music_Track = base.CreateObjectSet<Music_Track>("Music_Track");
                }
                return _Music_Track;
            }
        }
        private ObjectSet<Music_Track> _Music_Track;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Media_Item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedia_Item(Media_Item media_Item)
        {
            base.AddObject("Media_Item", media_Item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Media_Type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedia_Type(Media_Type media_Type)
        {
            base.AddObject("Media_Type", media_Type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Music_Artist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMusic_Artist(Music_Artist music_Artist)
        {
            base.AddObject("Music_Artist", music_Artist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Music_Genre EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMusic_Genre(Music_Genre music_Genre)
        {
            base.AddObject("Music_Genre", music_Genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Music_Track EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMusic_Track(Music_Track music_Track)
        {
            base.AddObject("Music_Track", music_Track);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaCatalogueModel", Name="Media_Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Media_Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Media_Item object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Media_Item CreateMedia_Item(global::System.Guid id)
        {
            Media_Item media_Item = new Media_Item();
            media_Item.id = id;
            return media_Item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Guid _id;
        partial void OnidChanging(global::System.Guid value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Media_File_id
        {
            get
            {
                return _Media_File_id;
            }
            set
            {
                OnMedia_File_idChanging(value);
                ReportPropertyChanging("Media_File_id");
                _Media_File_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Media_File_id");
                OnMedia_File_idChanged();
            }
        }
        private Nullable<global::System.Guid> _Media_File_id;
        partial void OnMedia_File_idChanging(Nullable<global::System.Guid> value);
        partial void OnMedia_File_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Media_Item_Media_Type", "Media_Type")]
        public Media_Type Media_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media_Type>("MediaCatalogueModel.FK_Media_Item_Media_Type", "Media_Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media_Type>("MediaCatalogueModel.FK_Media_Item_Media_Type", "Media_Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Media_Type> Media_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media_Type>("MediaCatalogueModel.FK_Media_Item_Media_Type", "Media_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Media_Type>("MediaCatalogueModel.FK_Media_Item_Media_Type", "Media_Type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Music_Track_Media_Item", "Music_Track")]
        public EntityCollection<Music_Track> Music_Track
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Music_Track>("MediaCatalogueModel.FK_Music_Track_Media_Item", "Music_Track");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Music_Track>("MediaCatalogueModel.FK_Music_Track_Media_Item", "Music_Track", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaCatalogueModel", Name="Media_Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Media_Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Media_Type object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Media_Type CreateMedia_Type(global::System.Guid id, global::System.String description)
        {
            Media_Type media_Type = new Media_Type();
            media_Type.id = id;
            media_Type.Description = description;
            return media_Type;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Guid _id;
        partial void OnidChanging(global::System.Guid value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Media_Item_Media_Type", "Media_Item")]
        public EntityCollection<Media_Item> Media_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Media_Item>("MediaCatalogueModel.FK_Media_Item_Media_Type", "Media_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Media_Item>("MediaCatalogueModel.FK_Media_Item_Media_Type", "Media_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaCatalogueModel", Name="Music_Artist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Music_Artist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Music_Artist object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Music_Artist CreateMusic_Artist(global::System.Guid id, global::System.String name)
        {
            Music_Artist music_Artist = new Music_Artist();
            music_Artist.id = id;
            music_Artist.Name = name;
            return music_Artist;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Guid _id;
        partial void OnidChanging(global::System.Guid value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Music_Track_Music_Artist", "Music_Track")]
        public EntityCollection<Music_Track> Music_Track
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Music_Track>("MediaCatalogueModel.FK_Music_Track_Music_Artist", "Music_Track");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Music_Track>("MediaCatalogueModel.FK_Music_Track_Music_Artist", "Music_Track", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaCatalogueModel", Name="Music_Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Music_Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Music_Genre object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Music_Genre CreateMusic_Genre(global::System.Guid id, global::System.String description)
        {
            Music_Genre music_Genre = new Music_Genre();
            music_Genre.id = id;
            music_Genre.Description = description;
            return music_Genre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Guid _id;
        partial void OnidChanging(global::System.Guid value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Music_Genre_Music_Genre", "Music_Genre1")]
        public EntityCollection<Music_Genre> Music_Genre1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Music_Genre>("MediaCatalogueModel.FK_Music_Genre_Music_Genre", "Music_Genre1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Music_Genre>("MediaCatalogueModel.FK_Music_Genre_Music_Genre", "Music_Genre1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Music_Genre_Music_Genre", "Music_Genre")]
        public Music_Genre Music_Genre2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Genre>("MediaCatalogueModel.FK_Music_Genre_Music_Genre", "Music_Genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Genre>("MediaCatalogueModel.FK_Music_Genre_Music_Genre", "Music_Genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Music_Genre> Music_Genre2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Genre>("MediaCatalogueModel.FK_Music_Genre_Music_Genre", "Music_Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Music_Genre>("MediaCatalogueModel.FK_Music_Genre_Music_Genre", "Music_Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Music_Track_Music_Genre", "Music_Track")]
        public EntityCollection<Music_Track> Music_Track
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Music_Track>("MediaCatalogueModel.FK_Music_Track_Music_Genre", "Music_Track");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Music_Track>("MediaCatalogueModel.FK_Music_Track_Music_Genre", "Music_Track", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaCatalogueModel", Name="Music_Track")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Music_Track : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Music_Track object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Music_Track CreateMusic_Track(global::System.Guid id)
        {
            Music_Track music_Track = new Music_Track();
            music_Track.id = id;
            return music_Track;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Guid _id;
        partial void OnidChanging(global::System.Guid value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Music_Track_Media_Item", "Media_Item")]
        public Media_Item Media_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media_Item>("MediaCatalogueModel.FK_Music_Track_Media_Item", "Media_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media_Item>("MediaCatalogueModel.FK_Music_Track_Media_Item", "Media_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Media_Item> Media_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media_Item>("MediaCatalogueModel.FK_Music_Track_Media_Item", "Media_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Media_Item>("MediaCatalogueModel.FK_Music_Track_Media_Item", "Media_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Music_Track_Music_Artist", "Music_Artist")]
        public Music_Artist Music_Artist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Artist>("MediaCatalogueModel.FK_Music_Track_Music_Artist", "Music_Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Artist>("MediaCatalogueModel.FK_Music_Track_Music_Artist", "Music_Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Music_Artist> Music_ArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Artist>("MediaCatalogueModel.FK_Music_Track_Music_Artist", "Music_Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Music_Artist>("MediaCatalogueModel.FK_Music_Track_Music_Artist", "Music_Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaCatalogueModel", "FK_Music_Track_Music_Genre", "Music_Genre")]
        public Music_Genre Music_Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Genre>("MediaCatalogueModel.FK_Music_Track_Music_Genre", "Music_Genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Genre>("MediaCatalogueModel.FK_Music_Track_Music_Genre", "Music_Genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Music_Genre> Music_GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Music_Genre>("MediaCatalogueModel.FK_Music_Track_Music_Genre", "Music_Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Music_Genre>("MediaCatalogueModel.FK_Music_Track_Music_Genre", "Music_Genre", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
